<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Masina_Inmatriculare"
        xmlns:CarLotModel="clr-namespace:CarLotModel;assembly=CarLotModel" x:Class="Masina_Inmatriculare.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="carViewSource" d:DesignSource="{d:DesignInstance {x:Type CarLotModel:Car}, CreateList=True}"/>
        <CollectionViewSource x:Key="permissionViewSource" d:DesignSource="{d:DesignInstance {x:Type CarLotModel:Permission}, CreateList=True}"/>
        <CollectionViewSource x:Key="carregistrationViewSource" Source="{Binding Registration, Source={StaticResource carViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
 Value="{Binding RelativeSource={x:Static RelativeSource.Self},
 Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "gbOperationsStyle" TargetType = "Button">
            <Setter Property = "Background" Value = "LightSkyBlue" />
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="293" Margin="52,99,0,0" VerticalAlignment="Top" Width="710">
            <TabItem Header="Car">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource carViewSource}" RenderTransformOrigin="0.5,0.5" Margin="-2,0,-5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="26*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="25*"/>
                        <ColumnDefinition Width="9*"/>
                        <ColumnDefinition Width="174*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="-0.171"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <DataGrid x:Name="carDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="66,24,37,70" RowDetailsVisibilityMode="VisibleWhenSelected" RenderTransformOrigin="0.5,0.5" Grid.Column="4">
                        <DataGrid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="0.371"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </DataGrid.RenderTransform>
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="car_IdColumn" Binding="{Binding Car_Id}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="classColumn" Binding="{Binding Class}" Header="Class" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="manufacturerColumn" Binding="{Binding Manufacturer}" Header="Manufacturer" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="modelColumn" Binding="{Binding Model}" Header="Model" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="yearColumn" Binding="{Binding Year}" Header="Year" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="17,23,0,0" VerticalAlignment="Top" Grid.ColumnSpan="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="car_IdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding Car_Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="false"/>
                        <Label Content="Class:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="classTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Class, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Manufacturer:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="manufacturerTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="3" Text="{Binding Manufacturer, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Model:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
                        <TextBox x:Name="modelTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="4" Text="{Binding Model, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Year:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
                        <TextBox x:Name="yearTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="5" Text="{Binding Year, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <Button x:Name="btnPrev" Content="Prev" HorizontalAlignment="Left" Margin="80,209,0,0" VerticalAlignment="Top" Width="75" Grid.Column="4" Button.Click="btnPrev_Click"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" Margin="410,214,0,0" VerticalAlignment="Top" Width="75" Grid.Column="4" Button.Click="btnNext_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Permission">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource permissionViewSource}">
                    <DataGrid x:Name="permissionDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="300,23,36,114" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="car_Registration_DocumentsColumn" Binding="{Binding Car_Registration_Documents}" Header="Car Registration Documents" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="perm_IdColumn" Binding="{Binding Perm_Id}" Header="Perm Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="phone_NoColumn" Binding="{Binding Phone_No}" Header="Phone No" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="worker_IdColumn" Binding="{Binding Worker_Id}" Header="Worker Id" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="18,23,0,0" VerticalAlignment="Top" Width="241">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Registration Documents:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="car_Registration_DocumentsTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding Car_Registration_Documents, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Perm Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="perm_IdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Perm_Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="false"/>
                        <Label Content="Phone No:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="phone_NoTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Phone_No, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Worker Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="worker_IdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="3" Text="{Binding Worker_Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <Button x:Name="btnPrevP" Content="Prev" HorizontalAlignment="Left" Margin="300,183,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnPrevP_Click"/>
                    <Button x:Name="btnNextP" Content="Next" HorizontalAlignment="Left" Margin="585,188,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnNextP_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Registration">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource carregistrationViewSource}">
                    <ComboBox x:Name="cmbCar" HorizontalAlignment="Left" Margin="144,55,0,0" VerticalAlignment="Top" Width="120" SelectedValue="{Binding ElementName=registrationDataGrid,Path=SelectedItem.Car_Id,Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="Class"/>
                                            <Binding Path="Year"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbPermission" HorizontalAlignment="Left" Margin="424,55,0,0" VerticalAlignment="Top" Width="120" SelectedValue="{Binding ElementName=registrationDataGrid,Path=SelectedItem.Perm_Id,Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Phone_No"/>
                                            <Binding Path="Worker_Id"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <DataGrid x:Name="registrationDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="144,96,160,53" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="ClassColumn1" Binding="{Binding Class}" Header="Class" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="YearColumn1" Binding="{Binding Year}" Header="Year" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="Phone_NoColumn" Binding="{Binding Phone_No}" Header="Phone_No" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="Worker_IdColumn" Binding="{Binding Worker_Id}" Header="Worker_Id" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>
        <GroupBox x:Name="gbOperations" Background="Blue" Button.Click="gbOperations_Click" Header="" HorizontalAlignment="Left" Height="100" Margin="323,10,0,0" VerticalAlignment="Top" Width="100">
            <StackPanel HorizontalAlignment="Left" Height="90" Margin="0,0,-2,-13" VerticalAlignment="Top" Width="90">
                <Button x:Name="btnAdd" Style="{StaticResource gbOperationsStyle}" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Button.Click="btnAdd_Click"/>
                <Button x:Name="btnEdit" Style="{StaticResource gbOperationsStyle}" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Button.Click="btnEdit_Click"/>
                <Button x:Name="btnDelete" Style="{StaticResource gbOperationsStyle}" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Button.Click="btnDelete_Click"/>
                <StackPanel Height="68" Margin="52,0,-15,0"/>
            </StackPanel>
        </GroupBox>
        <GroupBox x:Name="gbActions" Background="Blue" Header="" HorizontalAlignment="Left" Height="100" Margin="472,10,0,0" VerticalAlignment="Top" Width="100">
            <StackPanel HorizontalAlignment="Left" Height="100" Margin="0,10,-12,-33" VerticalAlignment="Top" Width="100">
                <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnSave_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="IsEnabled" Value="false" />
                            <Style.Triggers>
                                <!--Butonul Save va fi inactiv daca exista erori de validare -->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding (Validation.HasError), ElementName=modelTextBox}" Value="false" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="true" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnCancel_Click"/>
            </StackPanel>
        </GroupBox>

    </Grid>
</Window>
